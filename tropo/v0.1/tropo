({
	auth:function(){return auth({provider:'tropo'})},
	'application_create': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'application_findAll': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'application_find': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'application_delete': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		return http({provider:'tropo',url:url,method:'DELETE',params:args}, opts)
	},
	'application_update': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'PUT',params:args}, opts)
	},
	'address_addprefix': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'address_addtollfree': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'address_addintl': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'address_addspecific': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'address_addim': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'address_addtoken': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'address_findAll': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'address_find': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'address_delete': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		return http({provider:'tropo',url:url,method:'DELETE',params:args}, opts)
	},
	'address_viewexchanges': function(args, opts) {
		var url = 'https://api.tropo.com/v1/exchanges'
		args = args || {}
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'session_start': function(args, opts) {
		var url = 'https://api.tropo.com/v1/sessions'
		args = args || {}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'session_interrupt': function(args, opts) {
		var url = 'https://api.tropo.com/v1/sessions'
		args = args || {}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	}
})