({
	auth:function(){return auth({provider:'skyrock'})},
	'general_check_rate_limit': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/check_rate_limit.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'user_get': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'user_list_friends': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/list_friends.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'user_list_friends_ids': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/list_friends_ids.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'user_list_best_friends': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/list_best_friends.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'user_list_online_friends': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/list_online_friends.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'user_send_friend_request': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/send_friend_request.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args, auth:'yes'}, opts)
	},
	'user_add_to_best_friends': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/add_to_best_friends.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args, auth:'yes'}, opts)
	},
	'user_remove_from_best_friends': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/remove_from_best_friends.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args, auth:'yes'}, opts)
	},
	'user_remove_from_friends': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/remove_from_friends.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args, auth:'yes'}, opts)
	},
	'user_list_friend_requests': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/list_friend_requests.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'yes'}, opts)
	},
	'user_accept_friend_request': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/accept_friend_request.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args, auth:'yes'}, opts)
	},
	'user_deny_friend_request': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/deny_friend_request.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args, auth:'yes'}, opts)
	},
	'user_is_friend': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/is_friend.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['id_user_1'] == null) throw new Error('id_user_1 is a required parameter')
		var rgx = new RegExp('\{id_user_1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user_1'])
			if (args['id_user_1']) delete args['id_user_1']
		}
		if (url.indexOf('[/id_user_1]') !== -1) {
			url = url.replace('[/id_user_1]', '/' + args['id_user_1'])
			if (args['id_user_1']) delete args['id_user_1']
		}
		if (args['id_user_2'] == null) throw new Error('id_user_2 is a required parameter')
		var rgx = new RegExp('\{id_user_2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user_2'])
			if (args['id_user_2']) delete args['id_user_2']
		}
		if (url.indexOf('[/id_user_2]') !== -1) {
			url = url.replace('[/id_user_2]', '/' + args['id_user_2'])
			if (args['id_user_2']) delete args['id_user_2']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user_1]') !== -1) url = url.replace('[/id_user_1]', '')
		if (url.indexOf('[/id_user_2]') !== -1) url = url.replace('[/id_user_2]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'yes'}, opts)
	},
	'user_get_counters': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/get_counters.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'yes'}, opts)
	},
	'user_list_blacklist': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/list_blacklist.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'user_add_user_to_blacklist': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/add_user_to_blacklist.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args, auth:'yes'}, opts)
	},
	'user_remove_user_from_blacklist': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/remove_user_from_blacklist.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args, auth:'yes'}, opts)
	},
	'user_list_groups': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/user/list_groups.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'blog_get': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		var rgx = new RegExp('\{output_format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/output_format]') !== -1) {
			url = url.replace('[/output_format]', '/' + args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/output_format]') !== -1) url = url.replace('[/output_format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'blog_set': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/set.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'blog_change_avatar': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/change_avatar.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "multipart/form-data"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'blog_list_posts': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/list_posts.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{with_secret\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['with_secret'])
			if (args['with_secret']) delete args['with_secret']
		}
		if (url.indexOf('[/with_secret]') !== -1) {
			url = url.replace('[/with_secret]', '/' + args['with_secret'])
			if (args['with_secret']) delete args['with_secret']
		}
		var rgx = new RegExp('\{output_format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/output_format]') !== -1) {
			url = url.replace('[/output_format]', '/' + args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/with_secret]') !== -1) url = url.replace('[/with_secret]', '')
		if (url.indexOf('[/output_format]') !== -1) url = url.replace('[/output_format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'blog_list_offline_posts': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/list_offline_posts.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{with_secret\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['with_secret'])
			if (args['with_secret']) delete args['with_secret']
		}
		if (url.indexOf('[/with_secret]') !== -1) {
			url = url.replace('[/with_secret]', '/' + args['with_secret'])
			if (args['with_secret']) delete args['with_secret']
		}
		var rgx = new RegExp('\{output_format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/output_format]') !== -1) {
			url = url.replace('[/output_format]', '/' + args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/with_secret]') !== -1) url = url.replace('[/with_secret]', '')
		if (url.indexOf('[/output_format]') !== -1) url = url.replace('[/output_format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'blog_new_post': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/new_post.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'blog_get_post': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/get_post.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (args['id_post'] == null) throw new Error('id_post is a required parameter')
		var rgx = new RegExp('\{id_post\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_post'])
			if (args['id_post']) delete args['id_post']
		}
		if (url.indexOf('[/id_post]') !== -1) {
			url = url.replace('[/id_post]', '/' + args['id_post'])
			if (args['id_post']) delete args['id_post']
		}
		var rgx = new RegExp('\{output_format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/output_format]') !== -1) {
			url = url.replace('[/output_format]', '/' + args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/id_post]') !== -1) url = url.replace('[/id_post]', '')
		if (url.indexOf('[/output_format]') !== -1) url = url.replace('[/output_format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'blog_set_post': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/set_post.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'blog_delete_post': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/delete_post.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'blog_list_post_medias': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/list_post_medias.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (args['id_post'] == null) throw new Error('id_post is a required parameter')
		var rgx = new RegExp('\{id_post\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_post'])
			if (args['id_post']) delete args['id_post']
		}
		if (url.indexOf('[/id_post]') !== -1) {
			url = url.replace('[/id_post]', '/' + args['id_post'])
			if (args['id_post']) delete args['id_post']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/id_post]') !== -1) url = url.replace('[/id_post]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'blog_new_post_media': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/new_post_media.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'blog_delete_post_media': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/delete_post_media.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'blog_list_post_comments': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/list_post_comments.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (args['id_post'] == null) throw new Error('id_post is a required parameter')
		var rgx = new RegExp('\{id_post\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_post'])
			if (args['id_post']) delete args['id_post']
		}
		if (url.indexOf('[/id_post]') !== -1) {
			url = url.replace('[/id_post]', '/' + args['id_post'])
			if (args['id_post']) delete args['id_post']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/id_post]') !== -1) url = url.replace('[/id_post]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'blog_get_post_comment': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/get_post_comment.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (args['id_post'] == null) throw new Error('id_post is a required parameter')
		var rgx = new RegExp('\{id_post\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_post'])
			if (args['id_post']) delete args['id_post']
		}
		if (url.indexOf('[/id_post]') !== -1) {
			url = url.replace('[/id_post]', '/' + args['id_post'])
			if (args['id_post']) delete args['id_post']
		}
		if (args['id_comment'] == null) throw new Error('id_comment is a required parameter')
		var rgx = new RegExp('\{id_comment\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_comment'])
			if (args['id_comment']) delete args['id_comment']
		}
		if (url.indexOf('[/id_comment]') !== -1) {
			url = url.replace('[/id_comment]', '/' + args['id_comment'])
			if (args['id_comment']) delete args['id_comment']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/id_post]') !== -1) url = url.replace('[/id_post]', '')
		if (url.indexOf('[/id_comment]') !== -1) url = url.replace('[/id_comment]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'blog_list_skins': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/list_skins.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'blog_list_pictures': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/blog/list_pictures.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'profile_get': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		var rgx = new RegExp('\{output_format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/output_format]') !== -1) {
			url = url.replace('[/output_format]', '/' + args['output_format'])
			if (args['output_format']) delete args['output_format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/output_format]') !== -1) url = url.replace('[/output_format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'profile_set': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/set.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_add_album': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/add_album.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_list_albums': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/list_albums.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'profile_set_album': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/set_album.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_delete_album': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/delete_album.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_add_picture': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/add_picture.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_list_pictures': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/list_pictures.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (args['id_album'] == null) throw new Error('id_album is a required parameter')
		var rgx = new RegExp('\{id_album\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_album'])
			if (args['id_album']) delete args['id_album']
		}
		if (url.indexOf('[/id_album]') !== -1) {
			url = url.replace('[/id_album]', '/' + args['id_album'])
			if (args['id_album']) delete args['id_album']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/id_album]') !== -1) url = url.replace('[/id_album]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'profile_get_picture': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/get_picture.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['id_album'] == null) throw new Error('id_album is a required parameter')
		var rgx = new RegExp('\{id_album\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_album'])
			if (args['id_album']) delete args['id_album']
		}
		if (url.indexOf('[/id_album]') !== -1) {
			url = url.replace('[/id_album]', '/' + args['id_album'])
			if (args['id_album']) delete args['id_album']
		}
		if (args['id_picture'] == null) throw new Error('id_picture is a required parameter')
		var rgx = new RegExp('\{id_picture\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_picture'])
			if (args['id_picture']) delete args['id_picture']
		}
		if (url.indexOf('[/id_picture]') !== -1) {
			url = url.replace('[/id_picture]', '/' + args['id_picture'])
			if (args['id_picture']) delete args['id_picture']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_album]') !== -1) url = url.replace('[/id_album]', '')
		if (url.indexOf('[/id_picture]') !== -1) url = url.replace('[/id_picture]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'profile_set_picture': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/set_picture.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_delete_picture': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/delete_picture.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_get_config': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/get_config.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'profile_set_config': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/set_config.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_get_property_values': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/get_property_values.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['property'] == null) throw new Error('property is a required parameter')
		var rgx = new RegExp('\{property\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['property'])
			if (args['property']) delete args['property']
		}
		if (url.indexOf('[/property]') !== -1) {
			url = url.replace('[/property]', '/' + args['property'])
			if (args['property']) delete args['property']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/property]') !== -1) url = url.replace('[/property]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'profile_set_tags': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/set_tags.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'profile_get_tags': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/get_tags.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'profile_get_tags_types': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/profile/get_tags_types.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'mood_list_moods': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/mood/list_moods.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'mood_get_mood': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/mood/get_mood.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{id_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		if (url.indexOf('[/id_user]') !== -1) {
			url = url.replace('[/id_user]', '/' + args['id_user'])
			if (args['id_user']) delete args['id_user']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_user]') !== -1) url = url.replace('[/id_user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'mood_set_mood': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/mood/set_mood.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'mood_delete_mood': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/mood/delete_mood.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'newsfeed_send_event': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/newsfeed/send_event.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'newsfeed_send_alert': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/newsfeed/send_alert.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'newsfeed_list_events': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/newsfeed/list_events.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['events_category'] == null) args['events_category'] = "own"
		var rgx = new RegExp('\{events_category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['events_category'])
			if (args['events_category']) delete args['events_category']
		}
		if (url.indexOf('[/events_category]') !== -1) {
			url = url.replace('[/events_category]', '/' + args['events_category'])
			if (args['events_category']) delete args['events_category']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/events_category]') !== -1) url = url.replace('[/events_category]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'newsfeed_list_events_types': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/newsfeed/list_events_types.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'newsfeed_list_alerts': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/newsfeed/list_alerts.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'newsfeed_list_alerts_types': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/newsfeed/list_alerts_types.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'message_list_threads': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/message/list_threads.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['filter'] == null) args['filter'] = "all"
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'message_get_thread': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/message/get_thread.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['id_thread'] == null) throw new Error('id_thread is a required parameter')
		var rgx = new RegExp('\{id_thread\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id_thread'])
			if (args['id_thread']) delete args['id_thread']
		}
		if (url.indexOf('[/id_thread]') !== -1) {
			url = url.replace('[/id_thread]', '/' + args['id_thread'])
			if (args['id_thread']) delete args['id_thread']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/id_thread]') !== -1) url = url.replace('[/id_thread]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'skyrock',url:url,method:'GET',params:args}, opts)
	},
	'message_set_thread_as_read': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/message/set_thread_as_read.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'message_delete_thread': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/message/delete_thread.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'message_delete_message': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/message/delete_message.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'message_send_message': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/message/send_message.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'message_create_thread': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/message/create_thread.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	},
	'message_reply_thread': function(args, opts) {
		var url = 'https://api.skyrock.com/v2/message/reply_thread.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'skyrock',url:url,method:'POST',params:args}, opts)
	}
})