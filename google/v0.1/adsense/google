({
	auth:function(){return auth({provider:'google'})},
	'accounts.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts'
		args = args || {}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'accounts.get': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		var rgx = new RegExp('\{tree\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tree'])
			if (args['tree']) delete args['tree']
		}
		if (url.indexOf('[/tree]') !== -1 && args['/tree']) {
			url = url.replace('[/tree]', '/' + args['tree'])
			if (args['tree']) delete args['tree']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/tree]') !== -1) url = url.replace('[/tree]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.adclients.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/adclients'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.adclient.adunits.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/adclients/{adClientId}/adunits'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		var rgx = new RegExp('\{includeInactive\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includeInactive'])
			if (args['includeInactive']) delete args['includeInactive']
		}
		if (url.indexOf('[/includeInactive]') !== -1) {
			url = url.replace('[/includeInactive]', '/' + args['includeInactive'])
			if (args['includeInactive']) delete args['includeInactive']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/includeInactive]') !== -1) url = url.replace('[/includeInactive]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.adclient.adunits.get': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (args['adUnitId'] == null) throw new Error('adUnitId is a required parameter')
		var rgx = new RegExp('\{adUnitId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adUnitId'])
			if (args['adUnitId']) delete args['adUnitId']
		}
		if (url.indexOf('[/adUnitId]') !== -1) {
			url = url.replace('[/adUnitId]', '/' + args['adUnitId'])
			if (args['adUnitId']) delete args['adUnitId']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/adUnitId]') !== -1) url = url.replace('[/adUnitId]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.adclient.adunit.customchannels.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (args['adUnitId'] == null) throw new Error('adUnitId is a required parameter')
		var rgx = new RegExp('\{adUnitId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adUnitId'])
			if (args['adUnitId']) delete args['adUnitId']
		}
		if (url.indexOf('[/adUnitId]') !== -1) {
			url = url.replace('[/adUnitId]', '/' + args['adUnitId'])
			if (args['adUnitId']) delete args['adUnitId']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/adUnitId]') !== -1) url = url.replace('[/adUnitId]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.adclient.customchannels.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/adclients/{adClientId}/customchannels'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.adclient.customchannels.get': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (args['customChannelId'] == null) throw new Error('customChannelId is a required parameter')
		var rgx = new RegExp('\{customChannelId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['customChannelId'])
			if (args['customChannelId']) delete args['customChannelId']
		}
		if (url.indexOf('[/customChannelId]') !== -1) {
			url = url.replace('[/customChannelId]', '/' + args['customChannelId'])
			if (args['customChannelId']) delete args['customChannelId']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/customChannelId]') !== -1) url = url.replace('[/customChannelId]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.adclient.customchannel.adunits.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (args['customChannelId'] == null) throw new Error('customChannelId is a required parameter')
		var rgx = new RegExp('\{customChannelId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['customChannelId'])
			if (args['customChannelId']) delete args['customChannelId']
		}
		if (url.indexOf('[/customChannelId]') !== -1) {
			url = url.replace('[/customChannelId]', '/' + args['customChannelId'])
			if (args['customChannelId']) delete args['customChannelId']
		}
		var rgx = new RegExp('\{includeInactive\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includeInactive'])
			if (args['includeInactive']) delete args['includeInactive']
		}
		if (url.indexOf('[/includeInactive]') !== -1) {
			url = url.replace('[/includeInactive]', '/' + args['includeInactive'])
			if (args['includeInactive']) delete args['includeInactive']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/customChannelId]') !== -1) url = url.replace('[/customChannelId]', '')
		if (url.indexOf('[/includeInactive]') !== -1) url = url.replace('[/includeInactive]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.adclient.urlchannels.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/adclients/{adClientId}/urlchannels'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'account.reports.generate': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/accounts/{accountId}/reports'
		args = args || {}
		if (args['accountId'] == null) throw new Error('accountId is a required parameter')
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1 && args['/accountId']) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		var rgx = new RegExp('\{currency\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['currency'])
			if (args['currency']) delete args['currency']
		}
		if (url.indexOf('[/currency]') !== -1 && args['/currency']) {
			url = url.replace('[/currency]', '/' + args['currency'])
			if (args['currency']) delete args['currency']
		}
		var rgx = new RegExp('\{dimension\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['dimension'])
			if (args['dimension']) delete args['dimension']
		}
		if (url.indexOf('[/dimension]') !== -1 && args['/dimension']) {
			url = url.replace('[/dimension]', '/' + args['dimension'])
			if (args['dimension']) delete args['dimension']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1 && args['/filter']) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{locale\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['locale'])
			if (args['locale']) delete args['locale']
		}
		if (url.indexOf('[/locale]') !== -1 && args['/locale']) {
			url = url.replace('[/locale]', '/' + args['locale'])
			if (args['locale']) delete args['locale']
		}
		var rgx = new RegExp('\{metric\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metric'])
			if (args['metric']) delete args['metric']
		}
		if (url.indexOf('[/metric]') !== -1 && args['/metric']) {
			url = url.replace('[/metric]', '/' + args['metric'])
			if (args['metric']) delete args['metric']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1 && args['/sort']) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		var rgx = new RegExp('\{startIndex\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startIndex'])
			if (args['startIndex']) delete args['startIndex']
		}
		if (url.indexOf('[/startIndex]') !== -1 && args['/startIndex']) {
			url = url.replace('[/startIndex]', '/' + args['startIndex'])
			if (args['startIndex']) delete args['startIndex']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (args['startDate'] == null) throw new Error('startDate is a required parameter')
		var rgx = new RegExp('\{startDate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		if (url.indexOf('[/startDate]') !== -1) {
			url = url.replace('[/startDate]', '/' + args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		if (args['endDate'] == null) throw new Error('endDate is a required parameter')
		var rgx = new RegExp('\{endDate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['endDate'])
			if (args['endDate']) delete args['endDate']
		}
		if (url.indexOf('[/endDate]') !== -1) {
			url = url.replace('[/endDate]', '/' + args['endDate'])
			if (args['endDate']) delete args['endDate']
		}
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/currency]') !== -1) url = url.replace('[/currency]', '')
		if (url.indexOf('[/dimension]') !== -1) url = url.replace('[/dimension]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/locale]') !== -1) url = url.replace('[/locale]', '')
		if (url.indexOf('[/metric]') !== -1) url = url.replace('[/metric]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		if (url.indexOf('[/startIndex]') !== -1) url = url.replace('[/startIndex]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		if (url.indexOf('[/startDate]') !== -1) url = url.replace('[/startDate]', '')
		if (url.indexOf('[/endDate]') !== -1) url = url.replace('[/endDate]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'adclients.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/adclients'
		args = args || {}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'adclient.adunits.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/adclients/{adClientId}/adunits'
		args = args || {}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		var rgx = new RegExp('\{includeInactive\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includeInactive'])
			if (args['includeInactive']) delete args['includeInactive']
		}
		if (url.indexOf('[/includeInactive]') !== -1) {
			url = url.replace('[/includeInactive]', '/' + args['includeInactive'])
			if (args['includeInactive']) delete args['includeInactive']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/includeInactive]') !== -1) url = url.replace('[/includeInactive]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'adclient.adunits.get': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/adclients/{adClientId}/adunits/{adUnitId}'
		args = args || {}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (args['adUnitId'] == null) throw new Error('adUnitId is a required parameter')
		var rgx = new RegExp('\{adUnitId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adUnitId'])
			if (args['adUnitId']) delete args['adUnitId']
		}
		if (url.indexOf('[/adUnitId]') !== -1) {
			url = url.replace('[/adUnitId]', '/' + args['adUnitId'])
			if (args['adUnitId']) delete args['adUnitId']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/adUnitId]') !== -1) url = url.replace('[/adUnitId]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'adclient.adunit.customchannels.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/adclients/{adClientId}/adunits/{adUnitId}/customchannels'
		args = args || {}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (args['adUnitId'] == null) throw new Error('adUnitId is a required parameter')
		var rgx = new RegExp('\{adUnitId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adUnitId'])
			if (args['adUnitId']) delete args['adUnitId']
		}
		if (url.indexOf('[/adUnitId]') !== -1) {
			url = url.replace('[/adUnitId]', '/' + args['adUnitId'])
			if (args['adUnitId']) delete args['adUnitId']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/adUnitId]') !== -1) url = url.replace('[/adUnitId]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'adclient.customchannels.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/adclients/{adClientId}/customchannels'
		args = args || {}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'adclient.customchannels.get': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/adclients/{adClientId}/customchannels/{customChannelId}'
		args = args || {}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (args['customChannelId'] == null) throw new Error('customChannelId is a required parameter')
		var rgx = new RegExp('\{customChannelId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['customChannelId'])
			if (args['customChannelId']) delete args['customChannelId']
		}
		if (url.indexOf('[/customChannelId]') !== -1) {
			url = url.replace('[/customChannelId]', '/' + args['customChannelId'])
			if (args['customChannelId']) delete args['customChannelId']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/customChannelId]') !== -1) url = url.replace('[/customChannelId]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'adclient.customchannel.adunits.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/adclients/{adClientId}/customchannels/{customChannelId}/adunits'
		args = args || {}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (args['customChannelId'] == null) throw new Error('customChannelId is a required parameter')
		var rgx = new RegExp('\{customChannelId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['customChannelId'])
			if (args['customChannelId']) delete args['customChannelId']
		}
		if (url.indexOf('[/customChannelId]') !== -1) {
			url = url.replace('[/customChannelId]', '/' + args['customChannelId'])
			if (args['customChannelId']) delete args['customChannelId']
		}
		var rgx = new RegExp('\{includeInactive\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includeInactive'])
			if (args['includeInactive']) delete args['includeInactive']
		}
		if (url.indexOf('[/includeInactive]') !== -1) {
			url = url.replace('[/includeInactive]', '/' + args['includeInactive'])
			if (args['includeInactive']) delete args['includeInactive']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/customChannelId]') !== -1) url = url.replace('[/customChannelId]', '')
		if (url.indexOf('[/includeInactive]') !== -1) url = url.replace('[/includeInactive]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'adclient.urlchannels.list': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/adclients/{adClientId}/urlchannels'
		args = args || {}
		if (args['adClientId'] == null) throw new Error('adClientId is a required parameter')
		var rgx = new RegExp('\{adClientId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		if (url.indexOf('[/adClientId]') !== -1) {
			url = url.replace('[/adClientId]', '/' + args['adClientId'])
			if (args['adClientId']) delete args['adClientId']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{pageToken\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		if (url.indexOf('[/pageToken]') !== -1 && args['/pageToken']) {
			url = url.replace('[/pageToken]', '/' + args['pageToken'])
			if (args['pageToken']) delete args['pageToken']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/adClientId]') !== -1) url = url.replace('[/adClientId]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/pageToken]') !== -1) url = url.replace('[/pageToken]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	},
	'reports.generate': function(args, opts) {
		var url = 'https://www.googleapis.com/adsense/v1.1/reports'
		args = args || {}
		if (args['startDate'] == null) throw new Error('startDate is a required parameter')
		var rgx = new RegExp('\{startDate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		if (url.indexOf('[/startDate]') !== -1) {
			url = url.replace('[/startDate]', '/' + args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		if (args['endDate'] == null) throw new Error('endDate is a required parameter')
		var rgx = new RegExp('\{endDate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['endDate'])
			if (args['endDate']) delete args['endDate']
		}
		if (url.indexOf('[/endDate]') !== -1) {
			url = url.replace('[/endDate]', '/' + args['endDate'])
			if (args['endDate']) delete args['endDate']
		}
		var rgx = new RegExp('\{accountId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		if (url.indexOf('[/accountId]') !== -1 && args['/accountId']) {
			url = url.replace('[/accountId]', '/' + args['accountId'])
			if (args['accountId']) delete args['accountId']
		}
		var rgx = new RegExp('\{currency\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['currency'])
			if (args['currency']) delete args['currency']
		}
		if (url.indexOf('[/currency]') !== -1 && args['/currency']) {
			url = url.replace('[/currency]', '/' + args['currency'])
			if (args['currency']) delete args['currency']
		}
		var rgx = new RegExp('\{dimension\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['dimension'])
			if (args['dimension']) delete args['dimension']
		}
		if (url.indexOf('[/dimension]') !== -1 && args['/dimension']) {
			url = url.replace('[/dimension]', '/' + args['dimension'])
			if (args['dimension']) delete args['dimension']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1 && args['/filter']) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{locale\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['locale'])
			if (args['locale']) delete args['locale']
		}
		if (url.indexOf('[/locale]') !== -1 && args['/locale']) {
			url = url.replace('[/locale]', '/' + args['locale'])
			if (args['locale']) delete args['locale']
		}
		var rgx = new RegExp('\{metric\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metric'])
			if (args['metric']) delete args['metric']
		}
		if (url.indexOf('[/metric]') !== -1 && args['/metric']) {
			url = url.replace('[/metric]', '/' + args['metric'])
			if (args['metric']) delete args['metric']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1 && args['/sort']) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		var rgx = new RegExp('\{startIndex\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startIndex'])
			if (args['startIndex']) delete args['startIndex']
		}
		if (url.indexOf('[/startIndex]') !== -1 && args['/startIndex']) {
			url = url.replace('[/startIndex]', '/' + args['startIndex'])
			if (args['startIndex']) delete args['startIndex']
		}
		var rgx = new RegExp('\{maxResults\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		if (url.indexOf('[/maxResults]') !== -1) {
			url = url.replace('[/maxResults]', '/' + args['maxResults'])
			if (args['maxResults']) delete args['maxResults']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1 && args['/callback']) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1 && args['/fields']) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{prettyPrint\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		if (url.indexOf('[/prettyPrint]') !== -1) {
			url = url.replace('[/prettyPrint]', '/' + args['prettyPrint'])
			if (args['prettyPrint']) delete args['prettyPrint']
		}
		var rgx = new RegExp('\{quotaUser\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		if (url.indexOf('[/quotaUser]') !== -1 && args['/quotaUser']) {
			url = url.replace('[/quotaUser]', '/' + args['quotaUser'])
			if (args['quotaUser']) delete args['quotaUser']
		}
		var rgx = new RegExp('\{userIp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/userIp]') !== -1 && args['/userIp']) {
			url = url.replace('[/userIp]', '/' + args['userIp'])
			if (args['userIp']) delete args['userIp']
		}
		if (url.indexOf('[/startDate]') !== -1) url = url.replace('[/startDate]', '')
		if (url.indexOf('[/endDate]') !== -1) url = url.replace('[/endDate]', '')
		if (url.indexOf('[/accountId]') !== -1) url = url.replace('[/accountId]', '')
		if (url.indexOf('[/currency]') !== -1) url = url.replace('[/currency]', '')
		if (url.indexOf('[/dimension]') !== -1) url = url.replace('[/dimension]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/locale]') !== -1) url = url.replace('[/locale]', '')
		if (url.indexOf('[/metric]') !== -1) url = url.replace('[/metric]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		if (url.indexOf('[/startIndex]') !== -1) url = url.replace('[/startIndex]', '')
		if (url.indexOf('[/maxResults]') !== -1) url = url.replace('[/maxResults]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/prettyPrint]') !== -1) url = url.replace('[/prettyPrint]', '')
		if (url.indexOf('[/quotaUser]') !== -1) url = url.replace('[/quotaUser]', '')
		if (url.indexOf('[/userIp]') !== -1) url = url.replace('[/userIp]', '')
		return http({provider:'google',url:url,method:'GET',params:args}, opts)
	}
})