({
	auth:function(){return auth({provider:'boxcar'})},
	'subscribeToProvider': function(args, opts) {
		var url = 'https://boxcar.io/devices/providers/{provider_key}/notifications/subscribe'
		args = args || {}
		if (args['provider_key'] == null) throw new Error('provider_key is a required parameter')
		var rgx = new RegExp('\{provider_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['provider_key'])
			if (args['provider_key']) delete args['provider_key']
		}
		if (url.indexOf('[/provider_key]') !== -1) {
			url = url.replace('[/provider_key]', '/' + args['provider_key'])
			if (args['provider_key']) delete args['provider_key']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/provider_key]') !== -1) url = url.replace('[/provider_key]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'boxcar',url:url,method:'POST',params:args, auth:'none'}, opts)
	}
})