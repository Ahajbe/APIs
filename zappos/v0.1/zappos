({
	auth:function(){return auth({provider:'zappos'})},
	'autocomplete_api': function(args, opts) {
		var url = 'http://api.zappos.com/AutoComplete?term={term}'
		args = args || {}
		if (args['term'] == null) throw new Error('term is a required parameter')
		var rgx = new RegExp('\{term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['term'])
			if (args['term']) delete args['term']
		}
		if (url.indexOf('[/term]') !== -1) {
			url = url.replace('[/term]', '/' + args['term'])
			if (args['term']) delete args['term']
		}
		if (url.indexOf('[/term]') !== -1) url = url.replace('[/term]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'brand_api': function(args, opts) {
		var url = 'http://api.zappos.com/Brand/{id}'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'corevalue_api': function(args, opts) {
		var url = 'http://api.zappos.com/CoreValue'
		args = args || {}
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'corevalue_id_api': function(args, opts) {
		var url = 'http://api.zappos.com/CoreValue/{id}'
		args = args || {}
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'corevalue_random_api': function(args, opts) {
		var url = 'http://api.zappos.com/CoreValue/random'
		args = args || {}
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'image_styleId_api': function(args, opts) {
		var url = 'http://api.zappos.com/Image?styleId=["{styleId}"]'
		args = args || {}
		if (args['styleId'] == null) args['styleId'] = "6888"
		var rgx = new RegExp('\{styleId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (url.indexOf('[/styleId]') !== -1) {
			url = url.replace('[/styleId]', '/' + args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{recipe\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['recipe'])
			if (args['recipe']) delete args['recipe']
		}
		if (url.indexOf('[/recipe]') !== -1) {
			url = url.replace('[/recipe]', '/' + args['recipe'])
			if (args['recipe']) delete args['recipe']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/styleId]') !== -1) url = url.replace('[/styleId]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/recipe]') !== -1) url = url.replace('[/recipe]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'image_productid_api': function(args, opts) {
		var url = 'http://api.zappos.com/Image?productId={productId}'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{recipe\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['recipe'])
			if (args['recipe']) delete args['recipe']
		}
		if (url.indexOf('[/recipe]') !== -1) {
			url = url.replace('[/recipe]', '/' + args['recipe'])
			if (args['recipe']) delete args['recipe']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/recipe]') !== -1) url = url.replace('[/recipe]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'image_recipes_api': function(args, opts) {
		var url = 'http://api.zappos.com/Image/list/recipes'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'product_api': function(args, opts) {
		var url = 'http://api.zappos.com/Product?id=["{id1}","{id2}"]'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		if (args['id1'] == null) args['id1'] = "7564933"
		var rgx = new RegExp('\{id1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id1'])
			if (args['id1']) delete args['id1']
		}
		if (url.indexOf('[/id1]') !== -1) {
			url = url.replace('[/id1]', '/' + args['id1'])
			if (args['id1']) delete args['id1']
		}
		if (args['id2'] == null) args['id2'] = "7590514"
		var rgx = new RegExp('\{id2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id2'])
			if (args['id2']) delete args['id2']
		}
		if (url.indexOf('[/id2]') !== -1) {
			url = url.replace('[/id2]', '/' + args['id2'])
			if (args['id2']) delete args['id2']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/id1]') !== -1) url = url.replace('[/id1]', '')
		if (url.indexOf('[/id2]') !== -1) url = url.replace('[/id2]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'review_api ': function(args, opts) {
		var url = 'http://api.zappos.com/Review?productId={productid}'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		if (args['productId'] == null) throw new Error('productId is a required parameter')
		var rgx = new RegExp('\{productId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['productId'])
			if (args['productId']) delete args['productId']
		}
		if (url.indexOf('[/productId]') !== -1) {
			url = url.replace('[/productId]', '/' + args['productId'])
			if (args['productId']) delete args['productId']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/productId]') !== -1) url = url.replace('[/productId]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'search': function(args, opts) {
		var url = 'http://api.zappos.com/Search?term={term}'
		args = args || {}
		if (args['search_term'] == null) args['search_term'] = "boots"
		var rgx = new RegExp('\{search_term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (url.indexOf('[/search_term]') !== -1) {
			url = url.replace('[/search_term]', '/' + args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/search_term]') !== -1) url = url.replace('[/search_term]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'SortedSearch': function(args, opts) {
		var url = 'http://api.zappos.com/Search?term={term}'
		args = args || {}
		if (args['search_term'] == null) args['search_term'] = "boots"
		var rgx = new RegExp('\{search_term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (url.indexOf('[/search_term]') !== -1) {
			url = url.replace('[/search_term]', '/' + args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (args['field'] == null) args['field'] = "price"
		var rgx = new RegExp('\{field\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['field'])
			if (args['field']) delete args['field']
		}
		if (url.indexOf('[/field]') !== -1) {
			url = url.replace('[/field]', '/' + args['field'])
			if (args['field']) delete args['field']
		}
		if (args['order'] == null) args['order'] = "desc"
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/search_term]') !== -1) url = url.replace('[/search_term]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		if (url.indexOf('[/field]') !== -1) url = url.replace('[/field]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'LimitSearch': function(args, opts) {
		var url = 'http://api.zappos.com/Search?term={term}'
		args = args || {}
		if (args['search_term'] == null) args['search_term'] = "boots"
		var rgx = new RegExp('\{search_term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (url.indexOf('[/search_term]') !== -1) {
			url = url.replace('[/search_term]', '/' + args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (args['limit'] == null) args['limit'] = "10"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/search_term]') !== -1) url = url.replace('[/search_term]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'SearchPaginated': function(args, opts) {
		var url = 'http://api.zappos.com/Search?term={term}'
		args = args || {}
		if (args['search_term'] == null) args['search_term'] = "boots"
		var rgx = new RegExp('\{search_term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (url.indexOf('[/search_term]') !== -1) {
			url = url.replace('[/search_term]', '/' + args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (args['limit'] == null) args['limit'] = "10"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['page'] == null) args['page'] = "1"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/search_term]') !== -1) url = url.replace('[/search_term]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'GetFacetGrouping': function(args, opts) {
		var url = 'http://api.zappos.com/Search/term/{search_term}?includes=["facets"]'
		args = args || {}
		if (args['search_term'] == null) args['search_term'] = "boots"
		var rgx = new RegExp('\{search_term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (url.indexOf('[/search_term]') !== -1) {
			url = url.replace('[/search_term]', '/' + args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/search_term]') !== -1) url = url.replace('[/search_term]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'GetCustomizedFacetGrouping': function(args, opts) {
		var url = 'http://api.zappos.com/Search/term/includes=["facets"]&facets=["{facetField}","{facetField}"]'
		args = args || {}
		if (args['search_term'] == null) args['search_term'] = "boots"
		var rgx = new RegExp('\{search_term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (url.indexOf('[/search_term]') !== -1) {
			url = url.replace('[/search_term]', '/' + args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		var rgx = new RegExp('\{facetField\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['facetField'])
			if (args['facetField']) delete args['facetField']
		}
		if (url.indexOf('[/facetField]') !== -1) {
			url = url.replace('[/facetField]', '/' + args['facetField'])
			if (args['facetField']) delete args['facetField']
		}
		if (url.indexOf('[/search_term]') !== -1) url = url.replace('[/search_term]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		if (url.indexOf('[/facetField]') !== -1) url = url.replace('[/facetField]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'GetFacetFilters': function(args, opts) {
		var url = 'http://api.zappos.com/Search/term/{search_term}?filters={"{Facet_Field}":["{Facet_Value}"]}'
		args = args || {}
		if (args['search_term'] == null) args['search_term'] = "boots"
		var rgx = new RegExp('\{search_term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (url.indexOf('[/search_term]') !== -1) {
			url = url.replace('[/search_term]', '/' + args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['Facet_Field'] == null) args['Facet_Field'] = "colorFacet"
		var rgx = new RegExp('\{Facet_Field\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Facet_Field'])
			if (args['Facet_Field']) delete args['Facet_Field']
		}
		if (url.indexOf('[/Facet_Field]') !== -1) {
			url = url.replace('[/Facet_Field]', '/' + args['Facet_Field'])
			if (args['Facet_Field']) delete args['Facet_Field']
		}
		if (args['Facet_Value'] == null) args['Facet_Value'] = "blue"
		var rgx = new RegExp('\{Facet_Value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Facet_Value'])
			if (args['Facet_Value']) delete args['Facet_Value']
		}
		if (url.indexOf('[/Facet_Value]') !== -1) {
			url = url.replace('[/Facet_Value]', '/' + args['Facet_Value'])
			if (args['Facet_Value']) delete args['Facet_Value']
		}
		if (url.indexOf('[/search_term]') !== -1) url = url.replace('[/search_term]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/Facet_Field]') !== -1) url = url.replace('[/Facet_Field]', '')
		if (url.indexOf('[/Facet_Value]') !== -1) url = url.replace('[/Facet_Value]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'GetFacetFields': function(args, opts) {
		var url = 'http://api.zappos.com/Search?list=facetFields'
		args = args || {}
		if (args['search_term'] == null) args['search_term'] = "boots"
		var rgx = new RegExp('\{search_term\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (url.indexOf('[/search_term]') !== -1) {
			url = url.replace('[/search_term]', '/' + args['search_term'])
			if (args['search_term']) delete args['search_term']
		}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{includes\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/includes]') !== -1) {
			url = url.replace('[/includes]', '/' + args['includes'])
			if (args['includes']) delete args['includes']
		}
		if (url.indexOf('[/search_term]') !== -1) url = url.replace('[/search_term]', '')
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/includes]') !== -1) url = url.replace('[/includes]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'similarity_visual_search_api': function(args, opts) {
		var url = 'http://api.zappos.com/Search/Similarity?type=visualSearch&limit={limit}&styleId={styleId}&emphasis={options}'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['styleId'] == null) args['styleId'] = "6888"
		var rgx = new RegExp('\{styleId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (url.indexOf('[/styleId]') !== -1) {
			url = url.replace('[/styleId]', '/' + args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (args['options'] == null) args['options'] = "color"
		var rgx = new RegExp('\{options\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['options'])
			if (args['options']) delete args['options']
		}
		if (url.indexOf('[/options]') !== -1) {
			url = url.replace('[/options]', '/' + args['options'])
			if (args['options']) delete args['options']
		}
		if (args['type'] == null) args['type'] = "visiualSearch"
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		if (args['styleId'] == null) throw new Error('styleId is a required parameter')
		var rgx = new RegExp('\{styleId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (url.indexOf('[/styleId]') !== -1) {
			url = url.replace('[/styleId]', '/' + args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (args['limit'] == null) args['limit'] = "10"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{emphasis\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['emphasis'])
			if (args['emphasis']) delete args['emphasis']
		}
		if (url.indexOf('[/emphasis]') !== -1) {
			url = url.replace('[/emphasis]', '/' + args['emphasis'])
			if (args['emphasis']) delete args['emphasis']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/styleId]') !== -1) url = url.replace('[/styleId]', '')
		if (url.indexOf('[/options]') !== -1) url = url.replace('[/options]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/styleId]') !== -1) url = url.replace('[/styleId]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/emphasis]') !== -1) url = url.replace('[/emphasis]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'similarity_more_like_this_api': function(args, opts) {
		var url = 'http://api.zappos.com/Search/Similarity?type=moreLikeThis&limit={limit}&styleId={styleId}&emphasis={options}'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['styleId'] == null) args['styleId'] = "6888"
		var rgx = new RegExp('\{styleId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (url.indexOf('[/styleId]') !== -1) {
			url = url.replace('[/styleId]', '/' + args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (args['options'] == null) args['options'] = "color"
		var rgx = new RegExp('\{options\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['options'])
			if (args['options']) delete args['options']
		}
		if (url.indexOf('[/options]') !== -1) {
			url = url.replace('[/options]', '/' + args['options'])
			if (args['options']) delete args['options']
		}
		if (args['type'] == null) args['type'] = "visiualSearch"
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		if (args['styleId'] == null) throw new Error('styleId is a required parameter')
		var rgx = new RegExp('\{styleId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (url.indexOf('[/styleId]') !== -1) {
			url = url.replace('[/styleId]', '/' + args['styleId'])
			if (args['styleId']) delete args['styleId']
		}
		if (args['limit'] == null) args['limit'] = "10"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{emphasis\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['emphasis'])
			if (args['emphasis']) delete args['emphasis']
		}
		if (url.indexOf('[/emphasis]') !== -1) {
			url = url.replace('[/emphasis]', '/' + args['emphasis'])
			if (args['emphasis']) delete args['emphasis']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/styleId]') !== -1) url = url.replace('[/styleId]', '')
		if (url.indexOf('[/options]') !== -1) url = url.replace('[/options]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/styleId]') !== -1) url = url.replace('[/styleId]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/emphasis]') !== -1) url = url.replace('[/emphasis]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'statistics_latest_styles_api': function(args, opts) {
		var url = 'http://api.zappos.com/Statistics/type/latestStyles'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{location\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['location'])
			if (args['location']) delete args['location']
		}
		if (url.indexOf('[/location]') !== -1) {
			url = url.replace('[/location]', '/' + args['location'])
			if (args['location']) delete args['location']
		}
		var rgx = new RegExp('\{startDate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		if (url.indexOf('[/startDate]') !== -1) {
			url = url.replace('[/startDate]', '/' + args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		var rgx = new RegExp('\{startOrderItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startOrderItemId'])
			if (args['startOrderItemId']) delete args['startOrderItemId']
		}
		if (url.indexOf('[/startOrderItemId]') !== -1) {
			url = url.replace('[/startOrderItemId]', '/' + args['startOrderItemId'])
			if (args['startOrderItemId']) delete args['startOrderItemId']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{timespan\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['timespan'])
			if (args['timespan']) delete args['timespan']
		}
		if (url.indexOf('[/timespan]') !== -1) {
			url = url.replace('[/timespan]', '/' + args['timespan'])
			if (args['timespan']) delete args['timespan']
		}
		var rgx = new RegExp('\{option\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['option'])
			if (args['option']) delete args['option']
		}
		if (url.indexOf('[/option]') !== -1) {
			url = url.replace('[/option]', '/' + args['option'])
			if (args['option']) delete args['option']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/location]') !== -1) url = url.replace('[/location]', '')
		if (url.indexOf('[/startDate]') !== -1) url = url.replace('[/startDate]', '')
		if (url.indexOf('[/startOrderItemId]') !== -1) url = url.replace('[/startOrderItemId]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/timespan]') !== -1) url = url.replace('[/timespan]', '')
		if (url.indexOf('[/option]') !== -1) url = url.replace('[/option]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'statistics_top_styles_api': function(args, opts) {
		var url = 'http://api.zappos.com/Statistics/type/topStyles'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{location\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['location'])
			if (args['location']) delete args['location']
		}
		if (url.indexOf('[/location]') !== -1) {
			url = url.replace('[/location]', '/' + args['location'])
			if (args['location']) delete args['location']
		}
		var rgx = new RegExp('\{startDate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		if (url.indexOf('[/startDate]') !== -1) {
			url = url.replace('[/startDate]', '/' + args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		var rgx = new RegExp('\{startOrderItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startOrderItemId'])
			if (args['startOrderItemId']) delete args['startOrderItemId']
		}
		if (url.indexOf('[/startOrderItemId]') !== -1) {
			url = url.replace('[/startOrderItemId]', '/' + args['startOrderItemId'])
			if (args['startOrderItemId']) delete args['startOrderItemId']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{timespan\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['timespan'])
			if (args['timespan']) delete args['timespan']
		}
		if (url.indexOf('[/timespan]') !== -1) {
			url = url.replace('[/timespan]', '/' + args['timespan'])
			if (args['timespan']) delete args['timespan']
		}
		var rgx = new RegExp('\{option\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['option'])
			if (args['option']) delete args['option']
		}
		if (url.indexOf('[/option]') !== -1) {
			url = url.replace('[/option]', '/' + args['option'])
			if (args['option']) delete args['option']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/location]') !== -1) url = url.replace('[/location]', '')
		if (url.indexOf('[/startDate]') !== -1) url = url.replace('[/startDate]', '')
		if (url.indexOf('[/startOrderItemId]') !== -1) url = url.replace('[/startOrderItemId]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/timespan]') !== -1) url = url.replace('[/timespan]', '')
		if (url.indexOf('[/option]') !== -1) url = url.replace('[/option]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	},
	'statistics_top_styles_by_location_api': function(args, opts) {
		var url = 'http://api.zappos.com/Statistics/type/topStyles?location={"{key}":"{value}"}'
		args = args || {}
		if (args['key'] == null) args['key'] = "67d92579a32ecef2694b74abfc00e0f26b10d623"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{location\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['location'])
			if (args['location']) delete args['location']
		}
		if (url.indexOf('[/location]') !== -1) {
			url = url.replace('[/location]', '/' + args['location'])
			if (args['location']) delete args['location']
		}
		var rgx = new RegExp('\{startDate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		if (url.indexOf('[/startDate]') !== -1) {
			url = url.replace('[/startDate]', '/' + args['startDate'])
			if (args['startDate']) delete args['startDate']
		}
		var rgx = new RegExp('\{startOrderItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startOrderItemId'])
			if (args['startOrderItemId']) delete args['startOrderItemId']
		}
		if (url.indexOf('[/startOrderItemId]') !== -1) {
			url = url.replace('[/startOrderItemId]', '/' + args['startOrderItemId'])
			if (args['startOrderItemId']) delete args['startOrderItemId']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{timespan\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['timespan'])
			if (args['timespan']) delete args['timespan']
		}
		if (url.indexOf('[/timespan]') !== -1) {
			url = url.replace('[/timespan]', '/' + args['timespan'])
			if (args['timespan']) delete args['timespan']
		}
		var rgx = new RegExp('\{option\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['option'])
			if (args['option']) delete args['option']
		}
		if (url.indexOf('[/option]') !== -1) {
			url = url.replace('[/option]', '/' + args['option'])
			if (args['option']) delete args['option']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/location]') !== -1) url = url.replace('[/location]', '')
		if (url.indexOf('[/startDate]') !== -1) url = url.replace('[/startDate]', '')
		if (url.indexOf('[/startOrderItemId]') !== -1) url = url.replace('[/startOrderItemId]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/timespan]') !== -1) url = url.replace('[/timespan]', '')
		if (url.indexOf('[/option]') !== -1) url = url.replace('[/option]', '')
		return http({provider:'zappos',url:url,method:'GET',params:args}, opts)
	}
})