function url_replace(url, args, param, type, required, def) {
	if (args[param] === undefined && required && def === undefined)
		throw new Error(param + ' is a required parameter');
	if (type == 'str' && args[param] !== undefined && args[param] !== undefined && args[param] !== null && typeof args[param] != 'string')
		args[param] = args[param].toString();
	if (url.indexOf('{' + param + '}') !== -1) {
		var rgx = new RegExp('\\{' + param + '\\}', 'g');
		url = url.replace(rgx, args[param]);
		delete args[param];
	}
	return url;
}

var provider = fs('/bin/imgur');

exports.auth = function() { return auth({provider:provider}) };
/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.account = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.accountAlbumCount = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/albums/count';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string} [id]  
 * @methodhttp DELETE
 */
exports.accountAlbumDeletion = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/album/{id}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'id', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.accountAlbumIds = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/albums/ids';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.accountAlbumInformation = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/album/{id}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {number}  page   Allows you to set the page number so you don't have to retrieve all the data at once.
 * @methodhttp GET
 */
exports.accountAlbums = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/albums';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'page');
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string} [id]  
 * @methodhttp DELETE
 */
exports.accountCommentDeletion = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/comment/{id}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'id', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.accountComments = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/comments';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  Username of the account
 * @methodhttp POST
 */
exports.accountCreation = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  Username of the account
 * @methodhttp DELETE
 */
exports.accountDeletion = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.accountImageInformation = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/image/{id}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string} [page]  
 * @methodhttp GET
 */
exports.accountImages = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/images/{page}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'page', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.accountImagesCount = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/images/count';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.accountImagesIds = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/images/ids';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.accountLikes = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/likes';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string}  new   false for all notifications, true for only non-viewed notification. Default is true.
 * @methodhttp GET
 */
exports.accountMessages = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/notifications/messages';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'new', 'str');
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string} [type]  
 * @methodhttp GET
 */
exports.accountNotifications = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/notifications/{type}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'type', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string} [body]  The text of the message. Similar to the body of an email.
 * @param {string}  subject   The subject of the message
 * @param {string}  parent_id   The ID of the first message in the thread, by setting this, the message will be threaded to the given message.
 * @methodhttp POST
 */
exports.accountSendMessage = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/message';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'body', 'str', true);
	url = url_replace(url, args, 'subject', 'str');
	url = url_replace(url, args, 'parent_id', 'str');
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [user]  
 * @methodhttp GET
 */
exports.accountSettings = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{user}/settings';
	args = args || {};
	url = url_replace(url, args, 'user', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.accountStatistics = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/stats';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @param {string} [ids]  IDs of images to be added to the album, can be sent as array with multiple images
 * @methodhttp POST
 */
exports.addAlbumImages = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/album/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	url = url_replace(url, args, 'ids', 'str', true);
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.album = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/album/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [album_id]  The 5 character string for the album id
 * @param {string} [image_id]  The id of 5 characters for the image
 * @methodhttp GET
 */
exports.albumImage = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/album/{album_id}/image/{image_id}';
	args = args || {};
	url = url_replace(url, args, 'album_id', 'str', true);
	url = url_replace(url, args, 'image_id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.albumImages = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/album/{id}/images';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string}  ids   The images you want to include in the album
 * @methodhttp POST
 */
exports.albumUpload = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/album';
	args = args || {};
	url = url_replace(url, args, 'ids', 'str');
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp DELETE
 */
exports.albumdelete = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/album/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.comment = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/comment/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.commentCount = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/comments/count';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp DELETE
 */
exports.commentDelete = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/comment/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @methodhttp GET
 */
exports.commentIDs = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/comments/ids';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.commentReplies = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/comment/{id}/replies';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @param {string} [vote]  
 * @methodhttp POST
 */
exports.commentVote = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/comment/{id}/vote/{vote}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	url = url_replace(url, args, 'vote', 'str', true);
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string} [id]  
 * @methodhttp DELETE
 */
exports.deleteAccountImage = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/image/{id}';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'id', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [sort]  
 * @param {string} [page]  
 * @methodhttp GET
 */
exports.gallery = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/{sort}/{page}';
	args = args || {};
	url = url_replace(url, args, 'sort', 'str', true);
	url = url_replace(url, args, 'page', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @param {string} [comment]  The comment you want to create on image
 * @methodhttp POST
 */
exports.galleryCommentCreation = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}/comment';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	url = url_replace(url, args, 'comment', 'str', true);
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @param {string} [comment]  The reply to a comment
 * @methodhttp POST
 */
exports.galleryCommentReply = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}/comment/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	url = url_replace(url, args, 'comment', 'str', true);
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.galleryImage = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.galleryImageCommentCount = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}/comments/count';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp DELETE
 */
exports.galleryImageCommentDelete = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}/comment/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.galleryImageCommentIds = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}/comments/ids';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.galleryImageComments = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}/comments';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @param {string} [vote]  
 * @methodhttp POST
 */
exports.galleryImageVote = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}/vote/{vote}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	url = url_replace(url, args, 'vote', 'str', true);
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.galleryImageVotes = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}/votes';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [q]  The query string
 * @methodhttp GET
 */
exports.gallerySearch = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/search';
	args = args || {};
	url = url_replace(url, args, 'q', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.image = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/image/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [deletehash]  Deletehash of an image
 * @methodhttp DELETE
 */
exports.imageDelete = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/image/{deletehash}';
	args = args || {};
	url = url_replace(url, args, 'deletehash', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [image]  The binary data, a url string, or base64 data
 * @param {string}  album_id   ID of the album to upload to
 * @param {string}  type   The type of image being uploaded : binary, url, base64
 * @param {string}  title   A title for the image
 * @param {string}  description   A description of the image
 * @methodhttp POST
 */
exports.imageUpload = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/image';
	args = args || {};
	url = url_replace(url, args, 'image', 'str', true);
	url = url_replace(url, args, 'album_id', 'str');
	url = url_replace(url, args, 'type', 'str');
	url = url_replace(url, args, 'title', 'str');
	url = url_replace(url, args, 'description', 'str');
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [image]  A binary file, base64 data, or a URL for an image
 * @param {string}  album_id   The id of the album you want to add the image to
 * @param {string} [type]  The type of the file that's being sent; file, base64 or URL
 * @param {string} [name]  The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data
 * @param {string} [title]  The title of the image.
 * @param {string} [description]  The description of the image.
 * @methodhttp POST
 */
exports.imageUploadAlternative = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/upload';
	args = args || {};
	url = url_replace(url, args, 'image', 'str', true);
	url = url_replace(url, args, 'album_id', 'str');
	url = url_replace(url, args, 'type', 'str', true);
	url = url_replace(url, args, 'name', 'str', true);
	url = url_replace(url, args, 'title', 'str', true);
	url = url_replace(url, args, 'description', 'str', true);
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @methodhttp GET
 */
exports.notification = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/notification/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  The ID of the notification
 * @methodhttp DELETE
 */
exports.notificationViewed = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/notification/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @methodhttp GET
 */
exports.notifications = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/notification';
	args = args || {};
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  The ID of the gallery item
 * @methodhttp DELETE
 */
exports.removefromGallery = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http.delete({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  ID of the comment
 * @methodhttp POST
 */
exports.reportComment = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/comment/{id}/report';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [subreddit]  the subreddit
 * @param {string} [sort]  the sort
 * @param {string} [page]  the page number
 * @methodhttp GET
 */
exports.subredditGalleries = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/r/{subreddit}/{sort}/{page}';
	args = args || {};
	url = url_replace(url, args, 'subreddit', 'str', true);
	url = url_replace(url, args, 'sort', 'str', true);
	url = url_replace(url, args, 'page', 'str', true);
	return http({url:url, params:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [username]  
 * @param {string}  email   Change the users email
 * @param {number}  public_images   Use 0 or 1 for the boolean value
 * @param {number}  album_privacy   Use 0 or 1 for the boolean value
 * @param {string}  messaging_enabled   Use 0 or 1 for the boolean value
 * @methodhttp POST
 */
exports.updateAccountSettings = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/account/{username}/settings';
	args = args || {};
	url = url_replace(url, args, 'username', 'str', true);
	url = url_replace(url, args, 'email', 'str');
	url = url_replace(url, args, 'public_images');
	url = url_replace(url, args, 'album_privacy');
	url = url_replace(url, args, 'messaging_enabled', 'str');
	return http.post({url:url, body:args, provider:provider}, opts);
};

/** 
 * @category All
 * @param {string} [id]  
 * @param {string} [title]  This is the title that will be set in the gallery.
 * @param {number}  terms   If set to 1, the terms of the gallery are set.  This also allows you to by-pass our terms.  If you wish to set your own terms to upload the gallery there will be an error returned if they have not accepted the terms.
 * @methodhttp POST
 */
exports.uploadImagetoGallery = function(args, opts) {
	var url = 'https://imgur-apiv3.p.mashape.com/3/gallery/image/{id}';
	args = args || {};
	url = url_replace(url, args, 'id', 'str', true);
	url = url_replace(url, args, 'title', 'str', true);
	url = url_replace(url, args, 'terms');
	return http.post({url:url, body:args, provider:provider}, opts);
};