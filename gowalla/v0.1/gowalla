({
	auth:function(){return auth({provider:'gowalla'})},
	'spots_list': function(args, opts) {
		var url = 'http://api.gowalla.com//spots'
		args = args || {}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['lat'] == null) throw new Error('lat is a required parameter')
		var rgx = new RegExp('\{lat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['lat'])
			if (args['lat']) delete args['lat']
		}
		if (url.indexOf('[/lat]') !== -1) {
			url = url.replace('[/lat]', '/' + args['lat'])
			if (args['lat']) delete args['lat']
		}
		if (args['lng'] == null) throw new Error('lng is a required parameter')
		var rgx = new RegExp('\{lng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['lng'])
			if (args['lng']) delete args['lng']
		}
		if (url.indexOf('[/lng]') !== -1) {
			url = url.replace('[/lng]', '/' + args['lng'])
			if (args['lng']) delete args['lng']
		}
		if (args['radius'] == null) throw new Error('radius is a required parameter')
		var rgx = new RegExp('\{radius\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (url.indexOf('[/radius]') !== -1) {
			url = url.replace('[/radius]', '/' + args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/lat]') !== -1) url = url.replace('[/lat]', '')
		if (url.indexOf('[/lng]') !== -1) url = url.replace('[/lng]', '')
		if (url.indexOf('[/radius]') !== -1) url = url.replace('[/radius]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'spots_show': function(args, opts) {
		var url = 'http://api.gowalla.com//spots/{id}'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'spots_events': function(args, opts) {
		var url = 'http://api.gowalla.com//spots/{id}/events'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'spots_items': function(args, opts) {
		var url = 'http://api.gowalla.com//spots/{id}/items'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'spots_highlights': function(args, opts) {
		var url = 'http://api.gowalla.com//spots/{id}/highlights'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'spot_categories': function(args, opts) {
		var url = 'http://api.gowalla.com//categories'
		args = args || {}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'spot_category': function(args, opts) {
		var url = 'http://api.gowalla.com//categories/{id}'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'users_me': function(args, opts) {
		var url = 'http://api.gowalla.com//users/me'
		args = args || {}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args}, opts)
	},
	'users_show': function(args, opts) {
		var url = 'http://api.gowalla.com//users/{id}'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'users_stamps': function(args, opts) {
		var url = 'http://api.gowalla.com//users/{id}/stamps'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'users_top_spots': function(args, opts) {
		var url = 'http://api.gowalla.com//users/{id}/top_spots'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'users_activity_friends': function(args, opts) {
		var url = 'http://api.gowalla.com//users/{id}/activity/friends'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args}, opts)
	},
	'users_visited_spots_urls': function(args, opts) {
		var url = 'http://api.gowalla.com//users/{id}/visited_spots_urls'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'items_show': function(args, opts) {
		var url = 'http://api.gowalla.com//items/{id}'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args}, opts)
	},
	'highlights_types': function(args, opts) {
		var url = 'http://api.gowalla.com//highlights/types'
		args = args || {}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'trips_list': function(args, opts) {
		var url = 'http://api.gowalla.com//trips'
		args = args || {}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'trips_show': function(args, opts) {
		var url = 'http://api.gowalla.com//trips/{id}'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'checkins_show': function(args, opts) {
		var url = 'http://api.gowalla.com//checkins/{id}'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (args['Accept'] == null) args['Accept'] = "application/json"
		var rgx = new RegExp('\{Accept\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		if (url.indexOf('[/Accept]') !== -1) {
			url = url.replace('[/Accept]', '/' + args['Accept'])
			if (args['Accept']) delete args['Accept']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (args['X-Gowalla-API-Key'] == null) args['X-Gowalla-API-Key'] = "695723a3817c49c68b6e01c98862cd29"
		var rgx = new RegExp('\{X-Gowalla-API-Key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) {
			url = url.replace('[/X-Gowalla-API-Key]', '/' + args['X-Gowalla-API-Key'])
			if (args['X-Gowalla-API-Key']) delete args['X-Gowalla-API-Key']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		if (url.indexOf('[/Accept]') !== -1) url = url.replace('[/Accept]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/X-Gowalla-API-Key]') !== -1) url = url.replace('[/X-Gowalla-API-Key]', '')
		return http({provider:'gowalla',url:url,method:'GET',params:args, auth:'none'}, opts)
	}
})