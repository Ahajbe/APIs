({
	auth:function(){auth({provider:'facebook'})},
	'search': function(args, opts) {
		var url = 'search'
		args = args || {}
		if (args['q'] == null) throw new Error('q is a required parameter')
		var rgx = new RegExp('\{q\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['q'])
			if (args['q']) delete args['q']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (typeof args['center'] == 'object' && args['center'].lat !== undefined && args['center'].lng !== undefined) args['center'] = args['center'].lat + ',' + args['center'].lng
		var rgx = new RegExp('\{center\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['center'])
			if (args['center']) delete args['center']
		}
		var rgx = new RegExp('\{distance\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['distance'])
			if (args['distance']) delete args['distance']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getAlbum': function(args, opts) {
		var url = '{album}'
		args = args || {}
		if (args['album'] == null) args['album'] = "99394368305"
		var rgx = new RegExp('\{album\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['album'])
			if (args['album']) delete args['album']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getAlbumPhotos': function(args, opts) {
		var url = '{album}/photos'
		args = args || {}
		if (args['album'] == null) args['album'] = "99394368305"
		var rgx = new RegExp('\{album\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['album'])
			if (args['album']) delete args['album']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getAlbumComments': function(args, opts) {
		var url = '{album}/comments'
		args = args || {}
		if (args['album'] == null) args['album'] = "99394368305"
		var rgx = new RegExp('\{album\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['album'])
			if (args['album']) delete args['album']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getEvent': function(args, opts) {
		var url = '{event}'
		args = args || {}
		if (args['event'] == null) args['event'] = "331218348435"
		var rgx = new RegExp('\{event\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event'])
			if (args['event']) delete args['event']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getEventFeed': function(args, opts) {
		var url = '{event}/feed'
		args = args || {}
		if (args['event'] == null) args['event'] = "331218348435"
		var rgx = new RegExp('\{event\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event'])
			if (args['event']) delete args['event']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getEventNoReply': function(args, opts) {
		var url = '{event}/noreply'
		args = args || {}
		if (args['event'] == null) args['event'] = "331218348435"
		var rgx = new RegExp('\{event\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event'])
			if (args['event']) delete args['event']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getEventMaybe': function(args, opts) {
		var url = '{event}/maybe'
		args = args || {}
		if (args['event'] == null) args['event'] = "331218348435"
		var rgx = new RegExp('\{event\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event'])
			if (args['event']) delete args['event']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getEventInvited': function(args, opts) {
		var url = '{event}/invited'
		args = args || {}
		if (args['event'] == null) args['event'] = "331218348435"
		var rgx = new RegExp('\{event\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event'])
			if (args['event']) delete args['event']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getEventAttending': function(args, opts) {
		var url = '{event}/attending'
		args = args || {}
		if (args['event'] == null) args['event'] = "331218348435"
		var rgx = new RegExp('\{event\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event'])
			if (args['event']) delete args['event']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getEventDeclined': function(args, opts) {
		var url = '{event}/declined'
		args = args || {}
		if (args['event'] == null) args['event'] = "331218348435"
		var rgx = new RegExp('\{event\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event'])
			if (args['event']) delete args['event']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getEventPicture': function(args, opts) {
		var url = '{event}/picture'
		args = args || {}
		if (args['event'] == null) args['event'] = "331218348435"
		var rgx = new RegExp('\{event\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event'])
			if (args['event']) delete args['event']
		}
		if (args['type'] == null) args['type'] = "small"
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getGroup': function(args, opts) {
		var url = '{group}'
		args = args || {}
		if (args['group'] == null) args['group'] = "2204501798"
		var rgx = new RegExp('\{group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['group'])
			if (args['group']) delete args['group']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getGroupFeed': function(args, opts) {
		var url = '{group}/feed'
		args = args || {}
		if (args['group'] == null) args['group'] = "2204501798"
		var rgx = new RegExp('\{group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['group'])
			if (args['group']) delete args['group']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getGroupMembers': function(args, opts) {
		var url = '{group}/members'
		args = args || {}
		if (args['group'] == null) args['group'] = "2204501798"
		var rgx = new RegExp('\{group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['group'])
			if (args['group']) delete args['group']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getGroupPicture': function(args, opts) {
		var url = '{group}/picture'
		args = args || {}
		if (args['group'] == null) args['group'] = "2204501798"
		var rgx = new RegExp('\{group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['group'])
			if (args['group']) delete args['group']
		}
		if (args['type'] == null) args['type'] = "small"
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getLink': function(args, opts) {
		var url = '{link}'
		args = args || {}
		if (args['link'] == null) args['link'] = "114961875194024"
		var rgx = new RegExp('\{link\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['link'])
			if (args['link']) delete args['link']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getLinkComments': function(args, opts) {
		var url = '{link}/comments'
		args = args || {}
		if (args['link'] == null) args['link'] = "114961875194024"
		var rgx = new RegExp('\{link\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['link'])
			if (args['link']) delete args['link']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getNote': function(args, opts) {
		var url = '{note}'
		args = args || {}
		if (args['note'] == null) args['note'] = "122788341354"
		var rgx = new RegExp('\{note\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['note'])
			if (args['note']) delete args['note']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getNoteComments': function(args, opts) {
		var url = '{note}/comments'
		args = args || {}
		if (args['note'] == null) args['note'] = "122788341354"
		var rgx = new RegExp('\{note\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['note'])
			if (args['note']) delete args['note']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getNoteLikes': function(args, opts) {
		var url = '{note}/likes'
		args = args || {}
		if (args['note'] == null) args['note'] = "122788341354"
		var rgx = new RegExp('\{note\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['note'])
			if (args['note']) delete args['note']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPage': function(args, opts) {
		var url = '{page}'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageFeed': function(args, opts) {
		var url = '{page}/feed'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPagePicture': function(args, opts) {
		var url = '{page}/picture'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['type'] == null) args['type'] = "small"
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageTagged': function(args, opts) {
		var url = '{page}/tagged'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageLinks': function(args, opts) {
		var url = '{page}/links'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPagePhotos': function(args, opts) {
		var url = '{page}/photos'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageGroups': function(args, opts) {
		var url = '{page}/groups'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageAlbums': function(args, opts) {
		var url = '{page}/albums'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageStatuses': function(args, opts) {
		var url = '{page}/statuses'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageVideos': function(args, opts) {
		var url = '{page}/videos'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageNotes': function(args, opts) {
		var url = '{page}/notes'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPagePosts': function(args, opts) {
		var url = '{page}/posts'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageEvents': function(args, opts) {
		var url = '{page}/events'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPageCheckins': function(args, opts) {
		var url = '{page}/checkins'
		args = args || {}
		if (args['page'] == null) args['page'] = "platform"
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPhoto': function(args, opts) {
		var url = '{photo}'
		args = args || {}
		if (args['photo'] == null) args['photo'] = "98423808305"
		var rgx = new RegExp('\{photo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['photo'])
			if (args['photo']) delete args['photo']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPhotoComments': function(args, opts) {
		var url = '{photo}/comments'
		args = args || {}
		if (args['photo'] == null) args['photo'] = "98423808305"
		var rgx = new RegExp('\{photo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['photo'])
			if (args['photo']) delete args['photo']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPhotoLikes': function(args, opts) {
		var url = '{photo}/likes'
		args = args || {}
		if (args['photo'] == null) args['photo'] = "98423808305"
		var rgx = new RegExp('\{photo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['photo'])
			if (args['photo']) delete args['photo']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPost': function(args, opts) {
		var url = '{post}'
		args = args || {}
		if (args['post'] == null) args['post'] = "19292868552_118464504835613"
		var rgx = new RegExp('\{post\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['post'])
			if (args['post']) delete args['post']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getPostComments': function(args, opts) {
		var url = '{post}/comments'
		args = args || {}
		if (args['post'] == null) args['post'] = "19292868552_118464504835613"
		var rgx = new RegExp('\{post\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['post'])
			if (args['post']) delete args['post']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getStatus': function(args, opts) {
		var url = '{status}'
		args = args || {}
		if (args['status'] == null) args['status'] = "367501354973"
		var rgx = new RegExp('\{status\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['status'])
			if (args['status']) delete args['status']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getStatusComments': function(args, opts) {
		var url = '{status}/comments'
		args = args || {}
		if (args['status'] == null) args['status'] = "367501354973"
		var rgx = new RegExp('\{status\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['status'])
			if (args['status']) delete args['status']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUser': function(args, opts) {
		var url = '{user}'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args, auth: "none"}, opts)
	},
	'me': function(args, opts) {
		var url = '{user}'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserSearch': function(args, opts) {
		var url = '{user}/home'
		args = args || {}
		if (args['user'] == null) args['user'] = "robertscoble"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		if (args['q'] == null) args['q'] = "facebook"
		var rgx = new RegExp('\{q\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['q'])
			if (args['q']) delete args['q']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserHome': function(args, opts) {
		var url = '{user}/home'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserFeed': function(args, opts) {
		var url = '{user}/feed'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserTagged': function(args, opts) {
		var url = '{user}/tagged'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserPosts': function(args, opts) {
		var url = '{user}/posts'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserPicture': function(args, opts) {
		var url = '{user}/picture'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['type'] == null) args['type'] = "small"
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserFriends': function(args, opts) {
		var url = '{user}/friends'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserActivities': function(args, opts) {
		var url = '{user}/activities'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserCheckins': function(args, opts) {
		var url = '{user}/checkins'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserInterests': function(args, opts) {
		var url = '{user}/interests'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserMusic': function(args, opts) {
		var url = '{user}/music'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserBooks': function(args, opts) {
		var url = '{user}/books'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserMovies': function(args, opts) {
		var url = '{user}/movies'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserTelevision': function(args, opts) {
		var url = '{user}/television'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserLikes': function(args, opts) {
		var url = '{user}/likes'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserPhotos': function(args, opts) {
		var url = '{user}/photos'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserAlbums': function(args, opts) {
		var url = '{user}/albums'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserVideos': function(args, opts) {
		var url = '{user}/videos'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserGroups': function(args, opts) {
		var url = '{user}/groups'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserStatuses': function(args, opts) {
		var url = '{user}/statuses'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserLinks': function(args, opts) {
		var url = '{user}/links'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserNotes': function(args, opts) {
		var url = '{user}/notes'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserEvents': function(args, opts) {
		var url = '{user}/events'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserInbox': function(args, opts) {
		var url = '{user}/inbox'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserOutbox': function(args, opts) {
		var url = '{user}/outbox'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserUpdates': function(args, opts) {
		var url = '{user}/updates'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getUserAccounts': function(args, opts) {
		var url = '{user}/accounts'
		args = args || {}
		if (args['user'] == null) args['user'] = "me"
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getVideo': function(args, opts) {
		var url = '{video}'
		args = args || {}
		if (args['video'] == null) args['video'] = "614004947048"
		var rgx = new RegExp('\{video\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['video'])
			if (args['video']) delete args['video']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getVideoComments': function(args, opts) {
		var url = '{video}/comments'
		args = args || {}
		if (args['video'] == null) args['video'] = "614004947048"
		var rgx = new RegExp('\{video\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['video'])
			if (args['video']) delete args['video']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'postProfileIdFeed': function(args, opts) {
		var url = '{profile_id}/feed'
		args = args || {}
		if (args['profile_id'] == null) args['profile_id'] = "me"
		var rgx = new RegExp('\{profile_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['profile_id'])
			if (args['profile_id']) delete args['profile_id']
		}
		if (args['message'] == null) args['message'] = "I'm posting this from the Apigee API Console!"
		var rgx = new RegExp('\{message\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['message'])
			if (args['message']) delete args['message']
		}
		if (args['picture'] == null) args['picture'] = "{attachment}"
		var rgx = new RegExp('\{picture\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['picture'])
			if (args['picture']) delete args['picture']
		}
		if (args['link'] == null) args['link'] = "http://app.apigee.com/console/facebook"
		var rgx = new RegExp('\{link\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['link'])
			if (args['link']) delete args['link']
		}
		if (args['caption'] == null) args['caption'] = "http://app.apigee.com/console/facebook"
		var rgx = new RegExp('\{caption\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['caption'])
			if (args['caption']) delete args['caption']
		}
		if (args['name'] == null) args['name'] = "Apigee's API Console"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (args['description'] == null) args['description'] = "The API Console for Facebook allows you to quickly explore and test the Facebook API."
		var rgx = new RegExp('\{description\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['description'])
			if (args['description']) delete args['description']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postPostIdComments': function(args, opts) {
		var url = '{post_id}/comments'
		args = args || {}
		if (args['post_id'] == null) args['post_id'] = "163046417207_399962632207"
		var rgx = new RegExp('\{post_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['post_id'])
			if (args['post_id']) delete args['post_id']
		}
		if (args['message'] == null) args['message'] = "Test comment, please ignore!"
		var rgx = new RegExp('\{message\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['message'])
			if (args['message']) delete args['message']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postPostIdLikes': function(args, opts) {
		var url = '{post_id}/likes'
		args = args || {}
		if (args['post_id'] == null) args['post_id'] = "163046417207_399962632207"
		var rgx = new RegExp('\{post_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['post_id'])
			if (args['post_id']) delete args['post_id']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postProfileIdNotes': function(args, opts) {
		var url = '{profile_id}/notes'
		args = args || {}
		if (args['profile_id'] == null) args['profile_id'] = "me"
		var rgx = new RegExp('\{profile_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['profile_id'])
			if (args['profile_id']) delete args['profile_id']
		}
		if (args['message'] == null) args['message'] = "I'm posting this note from the Apigee API Console!"
		var rgx = new RegExp('\{message\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['message'])
			if (args['message']) delete args['message']
		}
		if (args['subject'] == null) args['subject'] = "Test post"
		var rgx = new RegExp('\{subject\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject'])
			if (args['subject']) delete args['subject']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postProfileIdLinks': function(args, opts) {
		var url = '{profile_id}/links'
		args = args || {}
		if (args['profile_id'] == null) args['profile_id'] = "me"
		var rgx = new RegExp('\{profile_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['profile_id'])
			if (args['profile_id']) delete args['profile_id']
		}
		if (args['message'] == null) args['message'] = "I'm posting this link from the Apigee API Console!"
		var rgx = new RegExp('\{message\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['message'])
			if (args['message']) delete args['message']
		}
		if (args['link'] == null) args['link'] = "http://app.apigee.com/console/facebook"
		var rgx = new RegExp('\{link\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['link'])
			if (args['link']) delete args['link']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postProfileIdEvents': function(args, opts) {
		var url = '{profile_id}/events'
		args = args || {}
		if (args['profile_id'] == null) args['profile_id'] = "me"
		var rgx = new RegExp('\{profile_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['profile_id'])
			if (args['profile_id']) delete args['profile_id']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postEventIdAttending': function(args, opts) {
		var url = '{event_id}/attending'
		args = args || {}
		if (args['event_id'] == null) args['event_id'] = "331218348435"
		var rgx = new RegExp('\{event_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event_id'])
			if (args['event_id']) delete args['event_id']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postEventIdMaybe': function(args, opts) {
		var url = '{event_id}/maybe'
		args = args || {}
		if (args['event_id'] == null) args['event_id'] = "331218348435"
		var rgx = new RegExp('\{event_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event_id'])
			if (args['event_id']) delete args['event_id']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postEventIdDeclined': function(args, opts) {
		var url = '{event_id}/declined'
		args = args || {}
		if (args['event_id'] == null) args['event_id'] = "331218348435"
		var rgx = new RegExp('\{event_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['event_id'])
			if (args['event_id']) delete args['event_id']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postProfileIdAlbums': function(args, opts) {
		var url = '{profile_id}/albums'
		args = args || {}
		if (args['profile_id'] == null) args['profile_id'] = "me"
		var rgx = new RegExp('\{profile_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['profile_id'])
			if (args['profile_id']) delete args['profile_id']
		}
		if (args['message'] == null) args['message'] = "This album was created via the Apigee API Console"
		var rgx = new RegExp('\{message\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['message'])
			if (args['message']) delete args['message']
		}
		if (args['name'] == null) args['name'] = "http://app.apigee.com/console/facebook"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'postAlbumIdPhotos': function(args, opts) {
		var url = '{album_id}/photos'
		args = args || {}
		if (args['album_id'] == null) args['album_id'] = "me"
		var rgx = new RegExp('\{album_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['album_id'])
			if (args['album_id']) delete args['album_id']
		}
		if (args['message'] == null) args['message'] = "{attachment}"
		var rgx = new RegExp('\{message\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['message'])
			if (args['message']) delete args['message']
		}
		return http({provider:'facebook',url:url,method:'POST',params:args}, opts)
	},
	'deleteObjectId': function(args, opts) {
		var url = '{object_id}'
		args = args || {}
		if (args['object_id'] == null) args['object_id'] = "OBJECTID"
		var rgx = new RegExp('\{object_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['object_id'])
			if (args['object_id']) delete args['object_id']
		}
		return http({provider:'facebook',url:url,method:'DELETE',params:args}, opts)
	},
	'deletePostIdLikes': function(args, opts) {
		var url = '{post_id}/likes'
		args = args || {}
		if (args['post_id'] == null) args['post_id'] = "OBJECTID"
		var rgx = new RegExp('\{post_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['post_id'])
			if (args['post_id']) delete args['post_id']
		}
		return http({provider:'facebook',url:url,method:'DELETE',params:args}, opts)
	},
	'getCheckin': function(args, opts) {
		var url = '{checkin}'
		args = args || {}
		if (args['checkin'] == null) args['checkin'] = "robertscoble"
		var rgx = new RegExp('\{checkin\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['checkin'])
			if (args['checkin']) delete args['checkin']
		}
		if (args['metadata'] == null) args['metadata'] = "0"
		var rgx = new RegExp('\{metadata\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['metadata'])
			if (args['metadata']) delete args['metadata']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args, auth: "none"}, opts)
	},
	'getApplication': function(args, opts) {
		var url = '{application}'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args, auth: "none"}, opts)
	},
	'getApplicationFeed': function(args, opts) {
		var url = '{application}/feed'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationPosts': function(args, opts) {
		var url = '{application}/posts'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationPicture': function(args, opts) {
		var url = '{application}/picture'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['type'] == null) args['type'] = "small"
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationTagged': function(args, opts) {
		var url = '{application}/tagged'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationLinks': function(args, opts) {
		var url = '{application}/links'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationPhotos': function(args, opts) {
		var url = '{application}/photos'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationAlbums': function(args, opts) {
		var url = '{application}/albums'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationStatuses': function(args, opts) {
		var url = '{application}/statuses'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationVideos': function(args, opts) {
		var url = '{application}/videos'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationNotes': function(args, opts) {
		var url = '{application}/notes'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationEvents': function(args, opts) {
		var url = '{application}/events'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	},
	'getApplicationInsights': function(args, opts) {
		var url = '{application}/insights'
		args = args || {}
		if (args['application'] == null) args['application'] = "2439131959"
		var rgx = new RegExp('\{application\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['application'])
			if (args['application']) delete args['application']
		}
		if (args['since'] == null) args['since'] = "last week"
		var rgx = new RegExp('\{since\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['since'])
			if (args['since']) delete args['since']
		}
		if (args['until'] == null) args['until'] = "yesterday"
		var rgx = new RegExp('\{until\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['until'])
			if (args['until']) delete args['until']
		}
		if (args['limit'] == null) args['limit'] = "3"
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (args['offset'] == null) args['offset'] = "2"
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		return http({provider:'facebook',url:url,method:'GET',params:args}, opts)
	}
})