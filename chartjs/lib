module_exports = function(type, width, height, labels, datasets, data, options) {
    jsClientApi({
        name: "chartjs",
        data: {
            type: type || 'line',
            width: width || 800,
            height: height || 300,
            labels: labels || [],
            datasets: datasets || [],
            options: options || {},
            data: data || []
        },
        initialize: js(function(callback, cbname) {
            $.getScript("http://api.webshell.io/fs/thyb/chart/v1.1/Chart.js", callback);
        }),
        loaded: js(function() {
        }),
        create: js(function(jsapi) {
            var ctx = document.getElementById('chart-js' + this.data.pid).getContext("2d");
            this.ch = new Chart(ctx);
            //console.log(this.data);
            var d = this.data;
            if (d.type == 'line') {
                this.ch.Line({
                    labels: d.labels,
                    datasets: d.datasets
                }, d.options);
            }
            else if (d.type == 'bar') {
                this.ch.Bar({
                    labels: d.labels,
                    datasets: d.datasets
                }, d.options);
            }
            else if (d.type == 'radar') {
                this.ch.Radar({
                    labels: d.labels,
                    datasets: d.datasets
                }, d.options);
            }
            else if (d.type == 'polarArea') {
                this.ch.PolarArea(d.data, d.options);
            }
            else if (d.type == 'pie') {
                this.ch.Pie(d.data, d.options);
            }
            else if (d.type == 'doughnut') {
                this.ch.Doughnut(d.data, d.options);
            }
        }),
        ready: js(function(jsapi) {
            
        }),
        interface: {

        }
    }, {
    	view: '<canvas id="chart-js<%= data.pid %>" width="<%= data.width %>" height="<%= data.height %>"></canvas>'
    })
}